// src/data/importExcel.js
const xlsx = require('xlsx');
const moment = require('moment-timezone');
const { encrypt } = require('../utils/crypto');
const mongoose = require('../db/mongoose');
const ProxyAccount = require('../db/ProxyAccount');
const path = require('path');

function nowVN() {
  return moment().tz('Asia/Ho_Chi_Minh').format('YYYY-MM-DD HH:mm:ss');
}

async function importFromExcel(filePath) {
  // 1. ƒê·ªçc workbook
  const wb = xlsx.readFile(filePath);
  const ws = wb.Sheets[wb.SheetNames[0]];
  const rows = xlsx.utils.sheet_to_json(ws, { header: 1 });

  // 2. B·ªè header, duy·ªát t·ª´ng d√≤ng
  for (let i = 0; i < rows.length; i++) {
    const row = rows[i];
    const [proxyRaw, email, pwd] = row;
    console.log(`üëâ D√≤ng ${i + 1} raw:`, row); // Th√™m d√≤ng n√†y

    if (!proxyRaw || !email || !pwd) {
      console.warn(`‚ö†Ô∏è D√≤ng ${i + 1} b·ªã b·ªè qua: thi·∫øu d·ªØ li·ªáu`, row);
      continue;
    }

    const parts = proxyRaw.split(':');
    if (parts.length < 4) {
      console.warn(`‚ö†Ô∏è D√≤ng ${i + 1} proxy kh√¥ng h·ª£p l·ªá:`, proxyRaw);
      continue;
    }

    const [host, port, user, pass, protocol = 'HTTP'] = parts;

    const createdAtVN = nowVN();
    const updatedAtVN = createdAtVN;

    try {
      await ProxyAccount.findOneAndUpdate(
        { email: email.trim() }, // ƒëi·ªÅu ki·ªán t√¨m
        {
          $set: {
            proxy: {
              host,
              port: Number(port),
              username: encrypt(user),
              password: encrypt(pass),
              protocol,
            },
            email: email.trim(),
            emailPassword: encrypt(pwd.trim()),
            active: true,
            streak: true,
            updatedAtVN, // c·∫≠p nh·∫≠t m·ªói l·∫ßn import
            complete: false, // m·∫∑c ƒë·ªãnh ch∆∞a ho√†n th√†nh
            proxyAlive: true, // m·∫∑c ƒë·ªãnh proxy c√≤n s·ªëng
          },
          $setOnInsert: {
            createdAtVN, // ch·ªâ thi·∫øt l·∫≠p l·∫ßn ƒë·∫ßu
          },
        },
        { upsert: true, new: true, setDefaultsOnInsert: true }
      );

      console.log(`‚úîÔ∏è ƒê√£ l∆∞u (ho·∫∑c c·∫≠p nh·∫≠t) account d√≤ng ${i + 1}`);
    } catch (e) {
      console.error(`‚ùå L·ªói l∆∞u account d√≤ng ${i + 1}:`, e.message);
    }
  }

  console.log('üöÄ Import xong t·∫•t c·∫£ d√≤ng.');
  mongoose.disconnect();
}

// Ch·∫°y script n·∫øu g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  const file =
    process.argv[2] || path.join(__dirname, '../../data/proxies.xlsx');
  importFromExcel(file);
}

module.exports = importFromExcel;
